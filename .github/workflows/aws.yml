name: Deploy to Amazon ECS

on:
  push:
    branches: ["master"]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Hello world Github action
        uses: actions/hello-world-javascript-action@v1
        with: # Set the secret as an input
          AWS_REGION: ${{secrets.AWS_REGION}} # set this to your preferred AWS region, e.g. us-west-1
          ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY_NAME}} # set this to your Amazon ECR repository name
          ECS_SERVICE: ${{secrets.ECS_SERVICE_NAME}} # set this to your Amazon ECS service name
          ECS_CLUSTER: ${{secrets.ECS_CLUSTER_NAME}} # set this to your Amazon ECS cluster name
          ECS_TASK_DEFINITION: ${{secrets.ECS_TASK_DEFINITION_NAME}} # set this to the path to your Amazon ECS task definition
          CONTAINER_NAME: ${{secrets.MY_CONTAINER_NAME}} # set this to the name of the container in the containerDefinitions section of your task definition
        env: # Or as an environment variable
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
          PORT: ${{ secrets.PORT }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{secrets.ECS_TASK_DEFINITION_NAME}}
          container-name: ${{secrets.MY_CONTAINER_NAME}}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{secrets.ECS_SERVICE_NAME}}
          cluster: ${{secrets.ECS_CLUSTER_NAME}}
          wait-for-service-stability: true
